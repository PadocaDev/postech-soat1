name: pipeline

on:
  push:

jobs:
  unit-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 20
        uses: actions/setup-java@v3
        with:
          java-version: '20'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
          fetch-depth: 0

      - run: mvn test

      - name: Generate JaCoCo Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2.0.1

      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"    

      - name: Upload JaCoCo coverage report
        uses: actions/upload-artifact@v2
        with:
          name: jacoco-report
          path: target/site/jacoco/

  build:
    name: Build Archive
    runs-on: ubuntu-latest
    needs: unit-test

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 20
        uses: actions/setup-java@v3
        with:
          java-version: '20'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Build with Maven
        run: mvn -B package -DskipTests --file pom.xml
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: target/
      - name: Upload JAR
        #This uploads artifacts from your workflow allowing you to share data between jobs and store data once a workflow is complete.
        uses: actions/upload-artifact@v2
        with:
          #Set artifact name
          name: artifact
          #From this path
          path: ./target/padocadev-0.0.1-SNAPSHOT.jar

  deploy-STG:
    runs-on: ubuntu-latest
    environment:
      name: stg
    needs: build

    if: github.ref == 'refs/heads/update_github_actions'
    steps:
      - name: Deploy
        shell: bash
        run: |
          echo "Deploy STG"

  deploy-Pre:
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/release'
    environment:
      name: pre
    needs: build

    steps:
      - name: Deploy
        shell: bash
        run: |
          echo "Deploy PRE"

  deploy-Prod:
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/main'
    environment:
      name: prod
    needs: build

    steps:
      - name: Deploy
        shell: bash
        run: |
          echo "Deploy PROD"
          
  deploy-aws:
    needs: build
    name: Deploy-aws
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: AWS-PRO
      url: http://padoca.us-east-1.elasticbeanstalk.com/
    steps:
      - name: Download JAR
        uses: actions/download-artifact@v3
        with:
          name: artifact
          path: target/
        #Deploy the artifact (JAR) into AWS Beanstalk
      - name: Display structure of downloaded files
        run: ls -R
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # aws_session_token: ${{ secrets.AWS_SESSION_TOKEN }}
          wait_for_environment_recovery: 90
          use_existing_version_if_available: false
          application_name: padoca
          environment_name: Padoca-env
          version_label: ${{github.SHA}}
          region: us-east-1
          deployment_package: ./target/padocadev-0.0.1-SNAPSHOT.jar
